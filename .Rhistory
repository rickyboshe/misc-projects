theme(plot.title = element_text(size = 14, hjust = 0.5))
View(movie_df)
table(movie_df$rating)
movie_df <- tibble("title" = wp_content_titles,
"year" = wp_content_year,
"runtime" = wp_content_run,
"genre" = wp_content_genre,
"rating" = floor(wp_content_rating),
"vote" = wp_content_vote)
ggplot(data = movie_df,
aes(x = rating, y = vote, group = rating)) +
geom_boxplot()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
table(movie_df$rating)
movie_df <- tibble("title" = wp_content_titles,
"year" = wp_content_year,
"runtime" = wp_content_run,
"genre" = wp_content_genre,
"rating" = floor(wp_content_rating),
"vote" = wp_content_vote)
ggplot(data = movie_df,
aes(x = rating, y = vote, group = rating)) +
geom_boxplot()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes(x = rating, y = vote, group = rating)) +
geom_density()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes( x = vote, group = rating)) +
geom_density()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes(x = rating, group = rating)) +
geom_density()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes(x = rating)) +
geom_density()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes(x = rating)) +
geom_density(na.rm = TRUE)+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes(x = rating, y=vote, group=rating)) +
geom_boxplot()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggplot(data = movie_df,
aes(x = rating)) +
geom_density(na.rm = TRUE)+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
library(ggpubr)
movie_df <- tibble("title" = wp_content_titles,
"year" = wp_content_year,
"runtime" = wp_content_run,
"genre" = wp_content_genre,
"rating" = floor(wp_content_rating),
"vote" = wp_content_vote)
p1<-ggplot(data = movie_df,
aes(x = rating, y=vote, group=rating)) +
geom_boxplot()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
p2<-ggplot(data = movie_df,
aes(x = rating)) +
geom_density(na.rm = TRUE)+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings (density)",
y="",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggarrange(p2, p1, ncol = 2, nrow = 1)
movie_df <- tibble("title" = wp_content_titles,
"year" = wp_content_year,
"runtime" = wp_content_run,
"genre" = wp_content_genre,
"rating" = floor(wp_content_rating),
"vote" = wp_content_vote)
p1<-ggplot(data = movie_df,
aes(x = rating, y=vote, group=rating)) +
geom_boxplot()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
p2<-ggplot(data = movie_df,
aes(x = rating, color="purple")) +
geom_density(na.rm = TRUE)+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings (density)",
y="",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggarrange(p2, p1, ncol = 2, nrow = 1)
movie_df <- tibble("title" = wp_content_titles,
"year" = wp_content_year,
"runtime" = wp_content_run,
"genre" = wp_content_genre,
"rating" = floor(wp_content_rating),
"vote" = wp_content_vote)
p1<-ggplot(data = movie_df,
aes(x = rating, y=vote, group=rating)) +
geom_boxplot()+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings",
y="No. of Votes",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
p2<-ggplot(data = movie_df,
aes(x = rating, color="red")) +
geom_density()+
guides(color=FALSE)+
theme_bw()+
labs(title="IMDB Top 45 British TV shows 2021 Ratings (density)",
y="",
x="Rating")+
theme(plot.title = element_text(size = 14, hjust = 0.5))
ggarrange(p2, p1, ncol = 2, nrow = 1)
library(gridExtra)
library(tidyverse)
library(DBI)
library(RSQLite)
library(ggplot2)
library(plotly)
library(lubridate)
library(ggcorrplot)
library(DataExplorer)
conn<-dbConnect(SQLite(), "mental_health.sqlite")
tables <- dbListTables(conn)
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
df.2014<-df.2014%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
remote_wrk=`Do you work remotely (outside of an office) at least 50% of the time?`,
id=UserID)
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2017<-df.2017%>%
pivot_wider(names_from = question,
values_from = answer)
df.2017<-df.2017%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
identify= `Are you openly identified at work as a person with a mental health issue?`,
race=`What is your race?`,
id=UserID)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male"|gender=="Female")
df.2014$gender<-factor(df.2014$gender)
#Explore data
plot_intro(df.2014, ggtheme = theme_bw())
plot_bar(df.2014, maxcat = 5, by="gender", ggtheme = theme_bw())
df.2016<-df.2016 %>%
filter(gender=="Male"|gender=="Female")
df.2016$gender<-factor(df.2016$gender)
df.2016<-flatten(df.2016)
df.2016<-as.tibble(df.2016)
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2016<-unlist(df.2016)
df.2016<-as.tibble(df.2016)
df.2016<-as.data.frame(df.2016)
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2016<-as.data.frame(unlist(df.2016))
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2016$age<-unlist(df.2016$age)
df.2016$gender<-unlist(df.2016$gender)
df.2016$location<-unlist(df.2016$location)
df.2016$fam_history_MI<-unlist(df.2016$fam_history_MI)
df.2016$diagnose<-unlist(df.2016$diagnose)
df.2016$remote_wrk<-unlist(df.2016$remote_wrk)
View(df.2016)
df.2016<-df.2016 %>%
filter(gender=="Male"|gender=="Female")
df.2016$gender<-factor(df.2016$gender)
#Explore data
plot_intro(df.2016, ggtheme = theme_bw())
df.2016$position<-unlist(df.2016$position)
df.2016$position<-str_replace_all(df.2016$position,'[^A-Za-z0-9 ]',"")
df.2016$position<-str_replace_all(df.2016$position,'c ',"")
View(df.2016)
df.2016$position<-str_replace_all(df.2016$position,'c',"")
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2016$age<-unlist(df.2016$age)
df.2016$gender<-unlist(df.2016$gender)
df.2016$location<-unlist(df.2016$location)
df.2016$fam_history_MI<-unlist(df.2016$fam_history_MI)
df.2016$diagnose<-unlist(df.2016$diagnose)
df.2016$remote_wrk<-unlist(df.2016$remote_wrk)
#Regex to help clean the position column
df.2016$position<-str_replace_all(df.2016$position,'[^A-Za-z0-9 ]',"")
df.2016$position<-str_replace_all(df.2016$position,'[c]',"")
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2016$age<-unlist(df.2016$age)
df.2016$gender<-unlist(df.2016$gender)
df.2016$location<-unlist(df.2016$location)
df.2016$fam_history_MI<-unlist(df.2016$fam_history_MI)
df.2016$diagnose<-unlist(df.2016$diagnose)
df.2016$remote_wrk<-unlist(df.2016$remote_wrk)
#Regex to help clean the position column
df.2016$position<-str_replace_all(df.2016$position,'[^A-Za-z0-9 ]',"")
df.2016$position<-str_replace_all(df.2016$position,'[ c]',"")
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2016$age<-unlist(df.2016$age)
df.2016$gender<-unlist(df.2016$gender)
df.2016$location<-unlist(df.2016$location)
df.2016$fam_history_MI<-unlist(df.2016$fam_history_MI)
df.2016$diagnose<-unlist(df.2016$diagnose)
df.2016$remote_wrk<-unlist(df.2016$remote_wrk)
#Regex to help clean the position column
df.2016$position<-str_replace_all(df.2016$position,'[^A-Za-z0-9 ]',"")
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male"|gender=="Female")
df.2014$gender<-factor(df.2014$gender)
#Explore data
plot_intro(df.2014, ggtheme = theme_bw())
plot_bar(df.2014, maxcat = 5, by="gender", ggtheme = theme_bw())
#str(df.2016)
#Some of the columns are lists, unlist them
df.2016$age<-unlist(df.2016$age)
df.2016$gender<-unlist(df.2016$gender)
df.2016$location<-unlist(df.2016$location)
df.2016$fam_history_MI<-unlist(df.2016$fam_history_MI)
df.2016$diagnose<-unlist(df.2016$diagnose)
df.2016$remote_wrk<-unlist(df.2016$remote_wrk)
#Regex to help clean the position column
df.2016$position<-str_replace_all(df.2016$position,'[^A-Za-z0-9 ]',"")
df.2016<-df.2016 %>%
filter(gender=="Male"|gender=="Female")
df.2016$gender<-factor(df.2016$gender)
#Explore data
plot_intro(df.2016, ggtheme = theme_bw())
plot_bar(df.2016, maxcat = 5, by="gender", ggtheme = theme_bw())
View(df.2017)
table(df.2017$race)
table(df.2017$location)
##For the 2017 dataset, the race column has numeric
#For consistency, we can recode it or remove it
df.2017<-df.2017%>%
mutate(race=ifelse(race=="-1", "unidentified",
ifelse(race=="More than one of the above", "Multiracial", race)))
table(df.2017$race)
df.2017<-df.2017 %>%
filter(gender=="Male"|gender=="Female")
df.2017$gender<-factor(df.2017$gender)
#Explore data
plot_bar(df.2017, maxcat = 5, by="gender",
ggtheme = theme_bw(), ncol = 2,
title = "2016 Respondents")
#Explore data
plot_bar(df.2017, maxcat = 5, by="gender",
ggtheme = theme_bw(), ncol = 2,
title = "2017 Respondents")
#Explore data
plot_bar(df.2017, maxcat = 8, by="gender",
ggtheme = theme_bw(), ncol = 2,
title = "2017 Respondents")
View(df.2016)
table(df.2014$location)
table(df.2016$location)
table(df.2017$location)
#Keep only locations with more than 20 observations in each of the survey years
country<-c("Australia", "Canada", "Germany", "Netherlands",
"United Kingdom", "United States")
str_detect(df.2014$location, pattern = country)
sum(str_detect(df.2014$location, pattern = country))
View(df.2014)
sum(country %in% df.2014$location))
sum(country %in% df.2014$location)
#Keep only locations with more than 20 observations in each of the survey years
country<-list("Australia", "Canada", "Germany", "Netherlands",
"United Kingdom", "United States")
sum(country %in% df.2014$location)
country %in% df.2014$location
str_detect(df.2014$location, pattern=country)
#Keep only locations with more than 20 observations in each of the survey years
country<-c("Australia", "Canada", "Germany", "Netherlands",
"United Kingdom", "United States")
str_detect(df.2014$location, pattern=country)
df.2014$location %in% country
sum(df.2014$location %in% country)
sum(df.2017$location %in% country)
sum(df.2016$location %in% country)
sum(df.2014$location %in% country)
df.2014<-df.2014%>%
filter(location %in% country)
country<-c("Australia", "Canada", "Germany", "Netherlands",
"United Kingdom", "United States of America")
sum(df.2017$location %in% country)
View(df.2017)
df.2016<-df.2016%>%
filter(location %in% country)
df.2017<-df.2017%>%
filter(location %in% country)
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
df.2014<-df.2014%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
remote_wrk=`Do you work remotely (outside of an office) at least 50% of the time?`,
id=UserID)
df.2016<-df.2016%>%
pivot_wider(names_from = question,
values_from = answer)
df.2016<-df.2016%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
diagnose=`Have you ever been diagnosed with a mental health disorder?`,
remote_wrk=`Do you work remotely?`,
id=UserID,
position=`Which of the following best describes your work position?`)
df.2017<-df.2017%>%
pivot_wider(names_from = question,
values_from = answer)
df.2017<-df.2017%>%
rename(age=`What is your age?`,
location=`What country do you live in?`,
gender=`What is your gender?`,
fam_history_MI=`Do you have a family history of mental illness?`,
identify= `Are you openly identified at work as a person with a mental health issue?`,
race=`What is your race?`,
id=UserID)
#For consistency purposes, only keep those that identified as Male or Female
df.2014<-df.2014 %>%
filter(gender=="Male"|gender=="Female")
df.2014$gender<-factor(df.2014$gender)
#str(df.2016)
#Some of the columns are lists, unlist them
df.2016$age<-unlist(df.2016$age)
df.2016$gender<-unlist(df.2016$gender)
df.2016$location<-unlist(df.2016$location)
df.2016$fam_history_MI<-unlist(df.2016$fam_history_MI)
df.2016$diagnose<-unlist(df.2016$diagnose)
df.2016$remote_wrk<-unlist(df.2016$remote_wrk)
#Regex to help clean the position column
df.2016$position<-str_replace_all(df.2016$position,'[^A-Za-z0-9 ]',"")
df.2016<-df.2016 %>%
filter(gender=="Male"|gender=="Female")
df.2016$gender<-factor(df.2016$gender)
##For the 2017 dataset, the race column has numeric
#For consistency, we can recode it or remove it
df.2017<-df.2017%>%
mutate(race=ifelse(race=="-1", "unidentified",
ifelse(race=="More than one of the above", "Multiracial", race)))
df.2017<-df.2017 %>%
filter(gender=="Male"|gender=="Female")
df.2017$gender<-factor(df.2017$gender)
#Keep only locations with more than 20 observations in each of the survey years
country<-c("Australia", "Canada", "Germany", "Netherlands",
"United Kingdom", "United States")
df.2014<-df.2014%>%
filter(location %in% country)
country<-c("Australia", "Canada", "Germany", "Netherlands",
"United Kingdom", "United States of America")
df.2016<-df.2016%>%
filter(location %in% country)
df.2017<-df.2017%>%
filter(location %in% country)
#Explore data
plot_intro(df.2014, ggtheme = theme_bw())
plot_bar(df.2014, maxcat = 5, by="gender",
ggtheme = theme_bw(),
title = "2014 Respondents")
plot_bar(df.2016, maxcat = 5, by="gender",
ggtheme = theme_bw(), ncol = 2,
title = "2016 Respondents")
plot_bar(df.2017, maxcat = 8, by="gender",
ggtheme = theme_bw(), ncol = 2,
title = "2017 Respondents")
plot_correlation(df.2014)
View(df.2014)
View(df.2016)
plot_correlation(df.2016)
View(df.2017)
View(df.2016)
View(df.2017)
#Pivot the columns longer and rename them
df.2014<-df.2014%>%
pivot_wider(names_from = question,
values_from = answer)
View(df.2014)
